########################################################################################################################
# Happy Hare main configuration parameters for the klipper module
#
# EDIT THIS FILE BASED ON YOUR SETUP
#
# Note that macro configuration is specifed separately in 'mmu_macro_vars.cfg'.
# Full details in https://github.com/moggieuk/Happy-Hare/tree/main/doc/configuration.md
#
[mmu]
happy_hare_version: 2.70	# Don't mess, used for upgrade detection
#
# The vendor and version config is important to define the capabilities of the MMU and basic CAD dimensions. These can
# all be overridden with the `cad` parameters detailed in the documentation but the vendor setting saves time.
#
# ERCF
# 1.1 original design, add "s" suffix for Sprigy, "b" for Binky, "t" for Triple-Decky
#     e.g. "1.1sb" for v1.1 with Springy mod and Binky encoder
#
# 2.0 new community ERCFv2
#
# Tradrack
# 1.0 add "e" if using encoder is fitted
#
# Prusa
#  - Comming soon (use Other for now)
#
# Other
#  - Generic setup that will require further customization of 'cad' parameters. See doc and section at the end
#
mmu_vendor: ERCF			# MMU family
mmu_version: 2.0			# MMU hardware version number (add mod suffix documented above)
mmu_num_gates: 9 			# Number of selector gates


# MMU Hardware Limits --------------------------------------------------------------------------------------------------
# ██╗     ██╗███╗   ███╗██╗████████╗███████╗
# ██║     ██║████╗ ████║██║╚══██╔══╝██╔════╝
# ██║     ██║██╔████╔██║██║   ██║   ███████╗
# ██║     ██║██║╚██╔╝██║██║   ██║   ╚════██║
# ███████╗██║██║ ╚═╝ ██║██║   ██║   ███████║
# ╚══════╝╚═╝╚═╝     ╚═╝╚═╝   ╚═╝   ╚══════╝
#
# Define the physical limits of your MMU. These setings will be respected regardless of individual speed settings.
#
gear_max_velocity: 300			# Never to be exceeded gear velocity regardless of specific parameters
gear_max_accel: 1500			# Never to be exceeded gear accelaration regardless of specific parameters
selector_max_velocity: 250		# Never to be exceeded selector velocity regardless of specific parameters
selector_max_accel: 1200		# Never to be exceeded selector accelaration regardless of specific parameters


# Servo configuration  -------------------------------------------------------------------------------------------------
# ███████╗███████╗██████╗ ██╗   ██╗ ██████╗ 
# ██╔════╝██╔════╝██╔══██╗██║   ██║██╔═══██╗
# ███████╗█████╗  ██████╔╝██║   ██║██║   ██║
# ╚════██║██╔══╝  ██╔══██╗╚██╗ ██╔╝██║   ██║
# ███████║███████╗██║  ██║ ╚████╔╝ ╚██████╔╝
# ╚══════╝╚══════╝╚═╝  ╚═╝  ╚═══╝   ╚═════╝ 
#
# Angle of the servo in three named positions
#   up   = tool is selected and filament is allowed to freely move through gate
#   down = to grip filament
#   move = ready the servo for selector move (optional - defaults to up)
# V2.4 on: These positions are only for initial config they are replaced with calibrated servo positions in `mmu_vars.cfg`
#
# Note that leaving the servo active when down can stress the electronics and is not recommended with EASY-BRD or ERB board
# unless the 5v power supply has been improved and it is not necessary with standard ERCF builds
# Make sure your hardware is suitable for the job!
#
servo_up_angle: 30			# ERCF: MG90S: 30  ; SAVOX SH0255MG: 140 ; Tradrack: 145
servo_down_angle: 140			# ERCF: MG90S: 140 ; SAVOX SH0255MG: 30  ; Tradrack: 1
servo_move_angle: 61			# Optional angle used when selector is moved (defaults to up position)
servo_duration: 0.2			# Duration of PWM burst sent to servo (default non-active mode, automatically turns off)
servo_dwell: 0.5			# Minimum time given to servo to complete movement prior to next move
servo_always_active: 0 			# CAUTION: 1=Force servo to always stay active, 0=Release after movement
servo_active_down: 0			# CAUTION: 1=Force servo to stay active when down only, 0=Release after movement
servo_buzz_gear_on_down: 3		# Whether to "buzz" the gear stepper on down to aid engagement


# Logging --------------------------------------------------------------------------------------------------------------
# ██╗      ██████╗  ██████╗  ██████╗ ██╗███╗   ██╗ ██████╗ 
# ██║     ██╔═══██╗██╔════╝ ██╔════╝ ██║████╗  ██║██╔════╝ 
# ██║     ██║   ██║██║  ███╗██║  ███╗██║██╔██╗ ██║██║  ███╗
# ██║     ██║   ██║██║   ██║██║   ██║██║██║╚██╗██║██║   ██║
# ███████╗╚██████╔╝╚██████╔╝╚██████╔╝██║██║ ╚████║╚██████╔╝
# ╚══════╝ ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = stepper moves)
# Generally you can keep console logging to a minimal whilst still sending debug output to the mmu.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file
# Note: that it is not recommended to keep logging at level greater that 2 (debug) if not debugging an issue because
# of the additional overhead
#
log_level: 1
log_file_level: 2			# Can also be set to -1 to disable log file completely
log_statistics: 1 			# 1 to log statistics on every toolchange (default), 0 to disable (but still recorded)
log_visual: 1				# 1 log visual representation of filament, 0 = disable
log_startup_status: 1			# Whether to log tool to gate status on startup, 1 = summary (default), 2 = full, 0 = disable


